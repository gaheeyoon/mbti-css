{"version":3,"sources":["components/home.js","components/test.js","components/result.js","router.js","App.js","reportWebVitals.js","index.js"],"names":["Home","props","navigate","useNavigate","React","createElement","className","type","onClick","Test","_useState","useState","_useState2","_slicedToArray","no","setNo","_useState3","id","score","_useState4","mbtiScore","setMbtiScore","clickAnswer","newScore","map","s","mbti","reduce","acc","curr","substring","console","log","pathname","search","concat","createSearchParams","questionList","1","title","A","B","2","3","4","5","6","7","8","9","10","11","12","Result","_useSearchParams","useSearchParams","get","result","ISTJ","mbtiType","explain","ISFJ","INFJ","INTJ","ISTP","ISFP","INFP","INTP","ESTP","ESFP","ENFP","ENTP","ESTJ","ESFJ","ENFJ","ENTJ","src","process","alt","MbitRouter","BrowserRouter","basename","Routes","Route","path","element","App","MbtiRouter","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.40d5a53b.chunk.js","sourcesContent":["import React from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Home = (props) => {\n    const navigate = useNavigate();\n    const start = () => {\n        navigate(\"/test\");\n    }\n\n    return (\n        <article className=\"container text-center\">\n            <h1 className=\"mt100\">나는 어떤 막내일까?</h1>\n            <h2 className=\"mt30\">회사 막내 MBTI 유형 테스트</h2>\n            <div className=\"d-grid mt100\">\n                <button className=\"btn btn-success\" type=\"button\" onClick={start}>테스트 시작하기</button>\n            </div>\n        </article>\n    );\n}\n\nexport default Home;","import React, { useState } from \"react\";\nimport { createSearchParams, useNavigate } from \"react-router-dom\";\n\nconst Test = (props) => {\n    const navigate = useNavigate();\n    const [no, setNo] = useState(1);\n    const [mbtiScore, setMbtiScore] = useState([\n        { id: \"EI\", score: 0 },\n        { id: \"SN\", score: 0 },\n        { id: \"TF\", score: 0 },\n        { id: \"JP\", score: 0 },\n    ]);  \n\n    const clickAnswer = (score, type) => {\n        setNo(no + 1);\n\n        if(no < 12) {\n            const newScore = mbtiScore.map((s) => \n                s.id === type? {id: s.id, score: s.score + score} : s\n            );\n            setMbtiScore(newScore);\n        } else {\n            const mbti = mbtiScore.reduce((acc, curr) =>\n                acc + (curr.score >= 2 ? curr.id.substring(0, 1): curr.id.substring(1, 2)), \"\"\n            )\n            console.log('mbti', mbti);\n\n            navigate({\n                pathname: \"/result\",\n                search: `?${createSearchParams({\n                    mbti: mbti\n                })}`\n            })\n        }\n    }\n\n    const questionList = {\n        1: {\n            \"title\": \"회사에 출근한 첫날, 기분이 어떤가?\", \n            \"type\": \"EI\", \n            \"A\": \"두근두근 설레, 어떤 사람들이 있을까? \", \n            \"B\": \"회색 콘크리트, 높은 건물, 차가운 책상.. 내가 잘 할 수 있을까?\"\n        },\n        2: {\n            \"title\": \"출근 후 동료들과 처음 하는 점심식사, 어떤가?\", \n            \"type\": \"EI\", \n            \"A\": \"오, 뭐 먹지? 배고파 맛있겠다!\",\n            \"B\": \"밥 먹으면서 무슨 이야기를 해야하지..? 자연스럽게 잘 이야기해보고 싶다\"\n        },\n        3: {\n            \"title\": \"나를 비롯한 팀 차원에서 환영회 회식 자리, 기분이 어떤가?\", \n            \"type\": \"EI\", \n            \"A\": \"얼마만의 술이야, 너무 신나, 가보자고 \",\n            \"B\": \"후 적당히 먹고 빨리 가고 싶다 ㅎ\"\n        },\n        4: {\n            \"title\": \"처음으로 참석한 팀 회의, 어떻게 하는 게 좋을까?\", \n            \"type\": \"SN\", \n            \"A\": \"회의 참석 전 아젠다를 꼼꼼하게 읽어보고 의견을 준비한다\",\n            \"B\": \"회의 때 팀장님의 손 끝, 작은 표정 변화를 캐치한다\"\n        },\n        5: {\n            \"title\": \"회식 장소를 예약하라는 팀장님의 지시를 받았다. 어떻게 할까? \", \n            \"type\": \"SN\", \n            \"A\": \"장소, 메뉴, 분위기, 쾌적성 등 여러 요소를 고려해 후보 식당을 리스트업하고 컨펌받는 게 좋겠다\",\n            \"B\": \"포털 사이트에서 몇몇 맛집을 찾아보니 ‘여기가 좋을 것 같다’는 생각이 든다. 결정하여 팀장님에게 보고한다\"\n        },\n        6: {\n            \"title\": \"사수인 김 대리님이 최 팀장님이 지시한 중요한 프로젝트에서 공정하지 못한 이유로 배제 되었다. 어떤 생각이 들까?\", \n            \"type\": \"SN\", \n            \"A\": \"그렇군 \",\n            \"B\": \"김 대리님이 배제된 이유가 뭘까? 내가 모르는 이전의 어떤 비하인드 스토리가 있었을까? 그게 무엇일까? 상상해본다\"\n        },\n        7: {\n            \"title\": \"함께 입사한 동료가 상사의 괴롭힘을 토로하며 상담을 해왔다. 무엇이라고 말할 것인가? \", \n            \"type\": \"TF\", \n            \"A\": \"현실적으로 상사와 떨어지는 게 어렵기 때문에, 잘 적응해볼 방법을 말해줄 것 같다\",\n            \"B\": \"무슨 일이 있었는지, 얼마나 힘들었는지 물어보고 같이 마음 아파 한다\"\n        },\n        8: {\n            \"title\": \"궁금한 게 생겨 고민이다. 어떻게 할 것인가? \", \n            \"type\": \"TF\", \n            \"A\": \"대리님께 바로 질문한다\",\n            \"B\": \"대리님이 지금 바빠 보이기 때문에 타이밍 잡기가 어렵다. 우선은 혼자 좀 더 찾아본다\"\n        },\n        9: {\n            \"title\": \"회사에 전화가 울렸다. 우리 회사는 내선번호 하나를 사용하기 때문에, 막내인 내가 받아야만 한다. 수화기를 들고 응대하는데, 누구에게 연결해야 할지 모르겠다. 어떻게 할까? \", \n            \"type\": \"TF\", \n            \"A\": \"사수 또는 옆자리 선배에게 질문한다 \",\n            \"B\": \"옆자리 선배가 너무 바빠 보여서 우선 스스로 해보려 한다. 전화선을 뽑아 버리고 싶다 ㅎ\"\n        },\n        10: {\n            \"title\": \"첫 출근을 앞둔 전날 밤, 무슨 생각을 하는가?\", \n            \"type\": \"JP\", \n            \"A\": \"내일 입을 옷, 가져갈 가방, 첫 출근 체크리스트 준비 완료! 두근두근\",\n            \"B\": \"내일 일은 내일의 나에게\"\n        },\n        11: {\n            \"title\": \"A 프로젝트의 자료조사를 맡았다. 어떻게 진행할 것인가?\", \n            \"type\": \"JP\", \n            \"A\": \"자료조사의 업무를 세분화해서 목차를 정하고, 정리하고, 마무리하는 데 필요한 시간을 예측해서 투두리스트를 세운다\",\n            \"B\": \"다음주까지 7일의 시간이 있으므로 5일 전 정도부터 시작하기로 한다\"\n        },\n        12: {\n            \"title\": \"첫 월급을 받았다. 어떻게 사용할 것인가? \", \n            \"type\": \"JP\", \n            \"A\": \"우선, 저축할 돈부터 미리 빼두고 생활비 안에서 사고 싶은 것을 산다\",\n            \"B\": \"수고한 나에게 박수를! 나를 위한 금융치료에 나선다\"\n        }\n    }\n\n    return (\n        <article className=\"container text-center\">\n            <div className=\"mt100\">\n                <span id=\"no\">{no}</span> 문제 / 12 문제\n            </div>\n            <h2 id=\"title\" className=\"mt30\">{questionList[no].title}</h2>\n            \n            <div className=\"d-grid gap-2 mt100\">\n                <button className=\"btn btn-success\" onClick={() => clickAnswer(1, questionList[no].type)}>{questionList[no].A}</button>\n                <button className=\"btn btn-success\" onClick={() => clickAnswer(0, questionList[no].type)}>{questionList[no].B}</button>\n            </div>\n        </article>\n    );\n}\n\nexport default Test;","import React from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst Result = (props) => {\n    const [createSearchParams] = useSearchParams();\n    const mbti = createSearchParams.get('mbti');\n\n    const result = {\n        \"ISTJ\" : {\"mbtiType\": \"선비정신, ISTJ\", \"explain\": \"저는 직장의 든든한 일꾼입니다. 저는 구조와 루틴을 중시하며 항상 효율성을 최적화할 수 있는 방법을 찾고 있습니다. 신뢰할 수 있고 철저하며 더러워지는 것을 두려워하지 않는 사람이 필요하다면 제가 적임자입니다.\"},\n        \"ISFJ\" : {\"mbtiType\": \"말 잘 듣는 일꾼, ISTP\", \"explain\": \"저는 직장에서 보살피는 양육자입니다. 저는 제가 하는 모든 일에 자비로운 손길을 더하며, 항상 다른 사람들을 지원하고 고양시킬 방법을 찾고 있습니다. 인내심 있고 공감하며 도움의 손길을 내미는 것을 두려워하지 않는 사람이 필요하다면 제가 바로 그 사람입니다.\"},\n        \"INFJ\" : {\"mbtiType\": \"시키기도 전에 일 끝냄, INFJ\", \"explain\": \"저는 직장에서 통찰력 있는 선구자입니다. 직관력이 뛰어나며 항상 긍정적인 영향을 미칠 수 있는 방법을 찾고 있습니다. 창의적이고 공감 능력이 뛰어나며 틀에 박힌 생각을 두려워하지 않는 사람이 필요하다면 제가 적임자입니다.\"},\n        \"INTJ\" : {\"mbtiType\": \"잘 되면 내 덕, 안 되면 네 탓, INTJ\", \"explain\": \"저는 직장에서 전략적인 부분을 담당합니다. 저는 복잡한 문제를 분석하는 것을 좋아하고 항상 혁신적인 솔루션을 만들 방법을 찾고 있습니다. 논리적이고 결단력이 있으며 현 상태에 도전하는 것을 두려워하지 않는 사람이 필요하다면 제가 적임자입니다.\"},\n        \"ISTP\" : {\"mbtiType\": \"잡학사전, ISTP\", \"explain\": \"저는 직장에서 실무적인 문제 해결사입니다. 저는 실질적인 문제를 잘 해결하고 항상 정면으로 맞설 수 있는 방법을 찾고 있습니다. 수완이 풍부하고 독립적이며 위험을 감수하는 것을 두려워하지 않는 사람이 필요하다면 제가 적임자입니다.\"},\n        \"ISFP\" : {\"mbtiType\": \"비폭력 불복종, ISFP\", \"explain\": \"저는 직장의 예술적 영혼입니다. 저는 제가 하는 모든 일에 창의적인 감각을 불어넣고, 항상 제 업무에 아름다움과 의미를 불어넣을 방법을 찾고 있습니다. 민감하고 직관적이며 틀에 박힌 사고를 두려워하지 않는 사람이 필요하다면 제가 적격입니다.\"},\n        \"INFP\" : {\"mbtiType\": \"힉힉호무리, INFP\", \"explain\": \"저는 직장의 몽상가입니다. 저는 내면이 풍부하고 제 가치와 열정을 실현할 방법을 항상 찾고 있습니다. 이상주의적이고 공감 능력이 뛰어나며 꿈을 추구하는 것을 두려워하지 않는 사람이 필요하다면 제가 적임자입니다.\"},\n        \"INTP\" : {\"mbtiType\": \"고집불통, INTP\", \"explain\": \"저는 직장에서 분석적인 사고를 하는 사람입니다. 새로운 아이디어를 탐구하는 것을 좋아하고 세상에 대한 이해를 넓힐 수 있는 방법을 항상 찾고 있습니다. 논리적이고 호기심이 많으며 기존의 통념에 도전하는 것을 두려워하지 않는 사람이 필요하다면 제가 적임자입니다.\"},\n        \"ESTP\" : {\"mbtiType\": \"개 썅 마이웨이, ESTP 막내\", \"explain\": \"저는 직장에서 모험적인 위험을 감수하는 스타일입니다. 저는 흥분을 즐기며 항상 한계를 뛰어넘고 제 한계를 시험할 방법을 찾고 있습니다. 대담하고 자발적이며 새로운 도전을 두려워하지 않는 사람이 필요하다면 제가 적격입니다.\"},\n        \"ESFP\" : {\"mbtiType\": \"관종 그자체, ESFP 막내\", \"explain\": \"저는 직장에서 파티의 생명입니다. 저는 모든 일에 재미를 사랑하는 에너지를 불어넣고, 일을 놀이처럼 느낄 수 있는 방법을 항상 찾고 있습니다. 외향적이고 열정적이며 직장에 재미를 불어넣는 것을 두려워하지 않는 사람이 필요하다면 제가 적격입니다.\"},\n        \"ENFP\" : {\"mbtiType\": \"빨리 끝내고 놀고 싶음, ENFP 막내\", \"explain\": \"저는 직장의 열정적인 치어리더입니다. 저는 모든 일에 전염성 있는 낙관주의를 가지고 있으며, 항상 다른 사람들에게 영감을 주고 동기를 부여할 방법을 찾고 있습니다. 열정적이고 창의적이며 큰 꿈을 꾸는 것을 두려워하지 않는 사람이 필요하다면 제가 바로 그 사람입니다.\"},\n        \"ENTP\" : {\"mbtiType\": \"얼떨결에 제일 힘든 일 함, ENTP 막내\", \"explain\": \"저는 직장의 혁신적인 선구자입니다. 저는 새로운 아이디어를 탐구하는 것을 좋아하고 항상 가능성의 한계를 뛰어넘을 방법을 찾고 있습니다. 창의적이고 대담하며 위험을 감수하는 것을 두려워하지 않는 사람이 필요하다면 제가 적임자입니다.\"},\n        \"ESTJ\" : {\"mbtiType\": \"꼰대 끝판왕, ESTJ 막내\", \"explain\": \"저는 직장에서의 말도 안 되는 리더입니다. 저는 구조와 질서를 중시하며 항상 효율성을 최적화할 수 있는 방법을 찾고 있습니다. 결단력 있고 자신감 넘치며 책임지는 것을 두려워하지 않는 사람이 필요하다면 제가 적임자입니다.\"},\n        \"ESFJ\" : {\"mbtiType\": \"일 < 친목질, ESFJ 막내\", \"explain\": \"저는 직장의 사교적인 나비입니다. 저는 제가 하는 모든 일에 따뜻하고 친근한 에너지를 불어넣고 항상 다른 사람들과 소통할 방법을 찾고 있습니다. 사교적이고 보살피며 관계 형성을 두려워하지 않는 사람이 필요하다면 제가 적격입니다.\"},\n        \"ENFJ\" : {\"mbtiType\": \"프리젠테이션 담당 말빨 황제, ENFJ 막내\", \"explain\": \"저는 직장에서 카리스마 넘치는 동기를 부여하는 사람입니다. 저는 다른 사람들에게 영감을 주고 이끌 수 있는 타고난 능력을 가지고 있으며, 항상 사람들의 장점을 끌어낼 수 있는 방법을 찾고 있습니다. 설득력 있고 공감하며 팀을 결집하는 데 주저하지 않는 사람이 필요하다면 제가 적임자입니다.\"},\n        \"ENTJ\" : {\"mbtiType\": \"타고난 팀장, ENTJ 막내\", \"explain\": \"저는 직장의 전략 사령관입니다. 저는 야심찬 목표를 세우는 것을 좋아하고 이를 달성하기 위한 방법을 항상 찾고 있습니다. 단호하고 분석적이며 위험을 감수하는 것을 두려워하지 않는 사람이 필요하다면 제가 적임자입니다.\"},\n    }\n    \n    return (\n        <article className=\"container text-center\">\n            <img id=\"img\" className=\"mt100\" \n                src={`${process.env.PUBLIC_URL}/assets/img/${mbti}.png`} alt=\"mbti\" />\n            <h2 id=\"mbtiType\" className=\"mt30\">{result[mbti].mbtiType}</h2>\n            <h3 id=\"explain\" className=\"mt30\">{result[mbti].explain}</h3>\n        </article>\n    );\n}\n\nexport default Result;","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./components/home\";\nimport Test from \"./components/test\";\nimport Result from \"./components/result\";\n\nconst MbitRouter = () => {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Routes>\n                <Route path=\"/\" element={<Home />} />\n                <Route path=\"/test\" element={<Test />} />\n                <Route path=\"/result\" element={<Result />} />\n            </Routes>\n        </BrowserRouter>\n    );\n}\n \nexport default MbitRouter;","import React from \"react\";\nimport './App.css';\nimport MbtiRouter from \"./router\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MbtiRouter />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}